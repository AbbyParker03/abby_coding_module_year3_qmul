# BIO319 Workshop 1 Script 
# Abby Parker 
# 12/03/2003

1 + 3 * 10
x <- 10 #numeric variables 
y <- 20 #numeric variables
z <- 'thirty' #character variable
# we can assign values or characters using the <- symbol. 
x * y

is.numeric(x)

a <- TRUE #this creates a logical variable using either TRUE or FALSE. 

b <- FALSE

1 < 2
1 > 2

x > y # testing our variables from earlier is X greater than Y using a logical operator. 
1 < 2 & 1 > 0 # is 1 less than 2 AND greater than 0. 
1 < 2 | 1 > 0 

#<= # is less than or equal to
#>= # is greater than or equal to
#== # is equal to 
#!= # is not equal to 
  
#& # AND
#| # OR 

x <- 12 / 3 > 3 & 5 ^ 2 < 25 

x <- 'The cake'
y <- 'A lie'

x == y 

a <- 'Abby'
nchar(a)
a >= 6

a < 6 & 'a' != 'James'& 'a' != 'Janelle' & 'a' != 'Jamil' & 'a' != 'Jessica'

# Scalars contain a single value (e.g. x <- 1 or cheese <- 'delicious)
# Vectors contain mulitple values in a single object 

x <- c(1,2,3,4)
y <- c(FALSE, TRUE, FALSE, TRUE, FALSE)
z <- c('I' , 'got' , 'the' , 'right' , 'temperature' , 'to' , 'shelter' , 'you' , 'from' , 'the' , 'storm')

class(x)
class (y)
class(z)

rep(c(1 ,2, 3 ), times= 3 ) #the rep function repeats a vector or sccaler mulitple times 

rep(c('I' , 'will' , 'not' , 'tell' , 'lies'), times = 100)

rep(c('a','b','c'), each = 5 )

seq#function creates numeric sequences. it will create a series of numbers between two values, separted by as many divisons as you specify. 
seq(from = 1, to=10)
seq (from = 10, to = -2)
seq(from = 1, to = 101 , by=10)
seq(from = 10, to=15 , by = 0.5)
seq(from = 0, to=15, by = 0.1)#need to add units cm 

1:3
3:9
12:-2
# this shorthand is commonly used too subet datausing subscripting

#we can subscript using square brackets

x <- c('a' , 'b' , 'd' , 'e' , 'f' , 'g' , 'h')

#we can specify which elements we want using integer positions 
x[1]
x[3]
x[3:5]
x[seq(from = 1, to = 5, by = 2)]

#we can also subscript vectors using logical statements. 
x <- c(1,2,3,4,5,6,7,8,9,8,7,6,5,4,3,2,1)
x>5

y <- x[x > 5]
print(y)

x <- c(2,3,4,5,6,7,8,9,10,11,12,13,14,15)
x <= 7
y <-x[x <= 7]
print(y)
z <- x[(2:15 %% 3)==0] #2:15 has the numbers 2 to 15, the %% 3 shows  what is left over after dividing by ==0 shows which numbers are divididable by 3 by showing they are true as they equal 0. z then prints a;; the values that are a muliple of 3. 
z

# matrices are two-dimensional

mat1.data <- c(1,2,3,4,5,6,7,8,9)
mat1 <- matrix (mat1.data,
                nrow = 3,
                ncol =3,
                byrow = TRUE)
print(mat1)

mat2 <- matrix (mat1.data,
                nrow = 3,
                ncol =3,
                byrow = FALSE)
print(mat2) # by changing the byrow the numbers are going along sideways rather than down in rows 

alpha <- c('a','b','c','d','e','f','g','h','i','j','k','l')

alpha1  <- matrix (alpha, 
                  nrow = 3,
                  ncol = 4, 
                  byrow = FALSE)
alpha1

# we can subscript matrices but use two numbers rather than one in the square brackes, as there are two dimensions to the object.
# first number is row, and the second is the column. 

mat1[1,3]

alpha1[3,4]

alpha1[2:3 , 1]
alpha1[-1,] 

df <- read.csv('NYTBestsellers.csv')
print(df)
str(df)

df[1:3 , 2:5]
df[3,]

df[1:5, 'title']

hist(df$total_weeks)
df$title[1:5]

df$personal_rating <- rep('brillant', times=nrow(df)) #adding a new column and filling it with the term 'brilliant'
str(df)

#creating a new columnn called number of pages 

df$number_of_pages <- rep(seq(from=100, to=500, by=100), each=20)
str(df)


#what type and class are each of these objects x,y and Z in the following code
w <- 'melanogaster'
x <- 1:12
y <- FALSE
z <- x + 1

# x is numerical and creates a sequence between the two integers. 
# y is logical and shows whether something is true ir false 

class(w)
class(x)
class(y)
class(z)

v1 <- 1:100

 z<- v1[(1:100 %% 2)==0]
 print(z)
 
 v2 <-1000:1500

odd <-v2[(1000:1500 %% 2)==1]
print (odd) 

divide<-odd[(odd %% 7)==0]
print (divide)

print(df)

top <-df$title[df$total_weeks >= 10]
print(top)

books <- data.frame(df$title[df$total_weeks < 10 & nchar(df$title) < 15] )
print(books)
str(books)



df$length <- nchar(df$title)
print(df)
df$long10 <- df$length
print(df)  
df$long10[df$long10 != "10"] <- "no"            
df$long10[df$long10 == "10"] <- "yes"

print(df)

books$length <-nchar(books$df.title.df.total_weeks...10...nchar.df.title....15.)
print(books)              
books$long10 <- books$length
print(books)
books$long10[books$long10 != "10"] <-"no"
books$long10[books$long10 == "10"] <- "yes"
print(books)


data.frame(df$title, df$author, df$year, df$long10)

